// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace tensaisses.Migrations.PipelineStagesDb
{
    [DbContext(typeof(PipelineStagesDbContext))]
    [Migration("20221223114937_11thCreate")]
    partial class _11thCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("tensai_sses.Models.PipelineStages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("updated_by_id")
                        .HasColumnType("integer");

                    b.Property<string>("updated_on")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("version")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("pipeline_stages");
                });

            modelBuilder.Entity("tensai_sses.Models.StageTools", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("access_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cred_secret")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cred_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cred_user")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                 //   b.Property<int>("pipeline_stagesid")
                  //      .HasColumnType("integer");

                    b.Property<int>("stage_id")
                        .HasColumnType("integer");

                    b.Property<string>("tool_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("update_on")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("updated_by_id")
                        .HasColumnType("integer");

                    b.Property<int>("version")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("stage_id");

                    b.ToTable("StageTools");
                });

            modelBuilder.Entity("tensai_sses.Models.StageTools", b =>
                {
                    b.HasOne("tensai_sses.Models.PipelineStages", "pipeline_stages")
                        .WithMany("StageToolskey")
                        .HasForeignKey("stage_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pipeline_stages");
                });

            modelBuilder.Entity("tensai_sses.Models.PipelineStages", b =>
                {
                    b.Navigation("StageToolskey");
                });
#pragma warning restore 612, 618
        }
    }
}
